name: PublishDockerImage

# Run whenever the publish job runs
on:
  push:
    tags:
      - "v*"

jobs:
  push_to_registry:
    name: Push Docker image to Docker Hub
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repo
        uses: actions/checkout@v2

      - name: Log in to Docker Hub
        if: ${{ github.event_name != 'pull_request' }}
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
        with:
          image: tonistiigi/binfmt:latest
          platforms: all

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: im2nguyen/rover
          tags: |
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=edge
            type=sha,prefix=,format=short
          labels: |
            org.opencontainers.image.title=rover
            org.opencontainers.image.base.name=scratch
            org.opencontainers.image.vendor=im2nguyen
            org.opencontainers.image.authors=im2nguyen
            org.opencontainers.image.licenses=MIT
            org.opencontainers.image.description=Interactive Terraform visualization. State and configuration explorer.
            org.opencontainers.image.version={{version}}
            org.opencontainers.image.source=https://github.com/im2nguyen/rover

      - name: Build and push Docker image
        uses: docker/build-push-action@v2
        with:
          context: .
          platforms: linux/386,linux/amd64,linux/arm64,linux/arm/v7,linux/arm/v6
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          build-args: |
            TF_VERSION=1.1.2
            NODE_VERSION=16
            GO_VERSION=1.17.5
